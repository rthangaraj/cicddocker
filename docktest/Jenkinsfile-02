pipeline {
  agent any


  options {

  skipDefaultCheckout true
  buildDiscarder(logRotator(numToKeepStr:'10'))
}


  stages {
    stage ("Checkout") {
      steps {
        checkout scm
      }
    }

    stage ("Pushing Docker Image") {

      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerhubcred') {
            def app = docker.build("rameshthangaraj/mypyimage02", "./docktest")
            app.push()
          }
        }
      }
    }

       stage ("Pulling Docker Image and testing inside it") {

      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerhubcred') {
            docker.image('rameshthangaraj/mypyimage02').inside {
              sh 'ls'
              sh 'echo "Testing completed inside the container"'
            }

          }
        }
      }
    }

    stage ("Deploy in AKS cluster") {
      steps {
        script {
          env.PIPELINE_NAMESPACE = "kube-system"
          kubernetesDeploy kubeconfigId: 'sandboxtestcluster', configs: 'docktest/*.yaml'


        }
      }
    }
  }
  post {
  success {
    echo "Running ${env.JOB_NAME} ${env.BUILD_ID} on ${env.JENKINS_URL} ${env.NODE_NAME}"
  print 'Job completed successfully.'

}
  }


}
